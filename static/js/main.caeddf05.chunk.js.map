{"version":3,"sources":["Redux/Actions/authActions.js","Containers/Login.js","api/axios.js","Redux/Actions/postActions.js","Containers/Dashboard.js","Containers/Signup.js","Containers/About.js","Containers/Post.js","Containers/ForgotPassword.js","Route/PrivateRoute.js","App.js","Redux/Reducers/AuthReducer.js","Redux/Reducers/postReducer.js","Redux/Store.js","index.js"],"names":["authLogout","localStorage","removeItem","type","logoutCheck","expiresIn","dispatch","setTimeout","auth","email","password","history","signUp","authData","returnSecureToken","url","axios","post","then","response","console","log","expirationDate","Date","getTime","data","payload","authSuccess","setItem","idToken","push","catch","error","authFailure","message","Login","emailRef","useRef","passwordRef","useSelector","state","authReducer","useDispatch","useHistory","handleSubmit","e","a","preventDefault","current","value","Card","Body","className","Alert","variant","Form","onSubmit","Group","id","Label","Control","ref","required","Button","to","instance","create","baseURL","postFetchSuccess","postData","postFetchFailure","getAllPosts","get","fetchedPosts","key","Dashboard","posts","postReducer","useEffect","Navbar","sticky","bg","Brand","href","Toggle","Collapse","Nav","Link","onClick","style","color","Container","fluid","Row","Col","sm","Jumbotron","event","name","target","note","formatData","postId","postCreationFailure","postCreation","controlId","placeholder","as","rows","CardColumns","map","item","border","float","delete","size","title","Signup","passwordConfirmRef","errors","useState","setError","About","Post","ForgotPassword","PrivateRoute","Component","component","rest","token","getItem","render","props","App","basename","exact","path","minHeight","maxWidth","initialState","loading","action","createPostInitialState","store","createStore","combineReducers","postCreationReducer","newPost","concat","applyMiddleware","thunk","logger","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.caeddf05.chunk.js","sourcesContent":["import axios from \"axios\";\r\nexport function authStart() {\r\n  return {\r\n    type: \"AUTH_START\",\r\n  };\r\n}\r\nexport function authSuccess(authData) {\r\n  return {\r\n    type: \"AUTH_SUCCESS\",\r\n    payload: authData,\r\n  };\r\n}\r\nexport function authFailure(error) {\r\n  return {\r\n    type: \"AUTH_FAILURE\",\r\n    payload: error,\r\n  };\r\n}\r\n\r\nexport function authLogout() {\r\n  localStorage.removeItem(\"token\");\r\n  localStorage.removeItem(\"expirationDate\");\r\n  return {\r\n    type: \"AUTH_LOGOUT\",\r\n  };\r\n}\r\n\r\nexport const logoutCheck = (expiresIn) => {\r\n  return (dispatch) => {\r\n    setTimeout(() => {\r\n      dispatch(authLogout());\r\n    }, expiresIn * 1000);\r\n  };\r\n};\r\nexport const logout = () => {\r\n  return (dispatch) => {\r\n    dispatch(authLogout());\r\n  };\r\n};\r\n\r\nexport const autoLogin = () => {\r\n  return (dispatch) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      dispatch(authLogout());\r\n    } else {\r\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\r\n      if (expirationDate <= new Date()) {\r\n        dispatch(authLogout());\r\n      } else {\r\n        //dispatch(authSuccess(authData));\r\n        dispatch(\r\n          logoutCheck((expirationDate.getTime() - new Date().getTime()) / 1000)\r\n        );\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const auth = (email, password, history, signUp) => {\r\n  return (dispatch) => {\r\n    dispatch(authStart());\r\n    const authData = {\r\n      email: email,\r\n      password: password,\r\n      returnSecureToken: true,\r\n    };\r\n    let url =\r\n      \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAEc7pjEtmDLHIXxdB2xDlnILm-EvmSXgU\";\r\n    if (signUp) {\r\n      url =\r\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAEc7pjEtmDLHIXxdB2xDlnILm-EvmSXgU\";\r\n    }\r\n    axios\r\n      .post(url, authData)\r\n      .then((response) => {\r\n        console.log(response);\r\n        const expirationDate = new Date(\r\n          new Date().getTime() + response.data.expiresIn * 1000\r\n        );\r\n        dispatch(authSuccess(response.data));\r\n        localStorage.setItem(\"token\", response.data.idToken);\r\n        localStorage.setItem(\"expirationDate\", expirationDate);\r\n        dispatch(logoutCheck(response.data.expiresIn));\r\n        history.push(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        dispatch(authFailure(error.response.data.error.message));\r\n      });\r\n  };\r\n};\r\n","import React, { useRef } from \"react\";\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\r\nimport { auth } from \"../Redux/Actions/authActions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nexport default function Login() {\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const error = useSelector((state) => state.authReducer.error);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  let signUp = true;\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await dispatch(\r\n      auth(emailRef.current.value, passwordRef.current.value, history, signUp)\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className=\"text-center mb-4\">Sign In</h2>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type=\"email\" ref={emailRef} required />\r\n            </Form.Group>\r\n            <Form.Group id=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control type=\"password\" ref={passwordRef} required />\r\n            </Form.Group>\r\n            <Button className=\"w-100 mt-3\" type=\"submit\">\r\n              Log In\r\n            </Button>\r\n            <div className=\"w-100 text-center mt-3\">\r\n              <Link to=\"/forgot-password\">Forgot Password</Link>\r\n            </div>\r\n            <div className=\"w-100 text-center mt-4\">\r\n              Need an account?<Link to=\"/signup\">Sign Up</Link>\r\n            </div>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://auth-development-690fe-default-rtdb.firebaseio.com/\",\r\n});\r\n\r\nexport default instance;\r\n","import axios from \"../../api/axios\";\r\n\r\nexport function postCreationStart() {\r\n  return {\r\n    type: \"POST_CREATION_START\",\r\n  };\r\n}\r\nexport function postCreationSuccess(id, postData) {\r\n  return {\r\n    type: \"POST_CREATION_SUCCESS\",\r\n    postId: id,\r\n    postData: postData,\r\n  };\r\n}\r\nexport function postCreationFailure(error) {\r\n  return {\r\n    type: \"POST_CREATION_FAILURE\",\r\n    payload: error,\r\n  };\r\n}\r\n\r\nexport function postFetchStart() {\r\n  return {\r\n    type: \"POST_FETCH_START\",\r\n  };\r\n}\r\nexport function postFetchSuccess(postData) {\r\n  return {\r\n    type: \"POST_FETCH_SUCCESS\",\r\n    payload: postData,\r\n  };\r\n}\r\nexport function postFetchFailure(error) {\r\n  return {\r\n    type: \"POST_FETCH_FAILURE\",\r\n    payload: error,\r\n  };\r\n}\r\n\r\nexport function postDeleteStart() {\r\n  return {\r\n    type: \"POST_DELETE_START\",\r\n  };\r\n}\r\nexport function postDeleteSuccess(id, postData) {\r\n  return {\r\n    type: \"POST_DELETE_SUCCESS\",\r\n    id: id,\r\n    postData: postData,\r\n  };\r\n}\r\nexport function postDeleteFailure(error) {\r\n  return {\r\n    type: \"POST_DELETE_FAILURE\",\r\n    payload: error,\r\n  };\r\n}\r\n\r\nexport const postCreation = (name, note) => {\r\n  console.log(name, note);\r\n  return (dispatch) => {\r\n    dispatch(postCreationStart());\r\n    const formatData = {\r\n      name: name,\r\n      note: note,\r\n    };\r\n    console.log(formatData);\r\n\r\n    axios\r\n      .post(\"/posts.json\", formatData)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        dispatch(postCreationSuccess(response.data, formatData));\r\n        dispatch(getAllPosts());\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        dispatch(postCreationFailure(error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const getAllPosts = () => {\r\n  return (dispatch) => {\r\n    dispatch(postFetchStart());\r\n    axios\r\n      .get(\"/posts.json\")\r\n      .then((response) => {\r\n        const fetchedPosts = [];\r\n        for (let key in response.data) {\r\n          fetchedPosts.push({\r\n            ...response.data[key],\r\n            id: key,\r\n          });\r\n        }\r\n        dispatch(postFetchSuccess(fetchedPosts));\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        dispatch(postFetchFailure(error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const postDelete = () => {\r\n  return (dispatch) => {\r\n    dispatch(postFetchStart());\r\n    axios\r\n      .get(\"/posts.json\")\r\n      .then((response) => {\r\n        const fetchedPosts = [];\r\n        for (let key in response.data) {\r\n          fetchedPosts.push({\r\n            ...response.data[key],\r\n            id: key,\r\n          });\r\n        }\r\n        dispatch(postFetchSuccess(fetchedPosts));\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        dispatch(postFetchFailure(error));\r\n      });\r\n  };\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport axios from \"../api/axios\";\r\nimport {\r\n  Button,\r\n  Jumbotron,\r\n  Nav,\r\n  Navbar,\r\n  Card,\r\n  CardColumns,\r\n  Form,\r\n  Container,\r\n  Row,\r\n  Col,\r\n} from \"react-bootstrap\";\r\nimport { Trash } from \"react-bootstrap-icons\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logout } from \"../Redux/Actions/authActions\";\r\nimport { postCreation } from \"../Redux/Actions/postActions\";\r\nimport { getAllPosts } from \"../Redux/Actions/postActions\";\r\nexport default function Dashboard() {\r\n  const dispatch = useDispatch();\r\n  const handleLogout = () => {\r\n    dispatch(logout());\r\n  };\r\n  const posts = useSelector((state) => state.postReducer.postData);\r\n  useEffect(() => {\r\n    dispatch(getAllPosts());\r\n  }, [dispatch]);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    let name = event.target.name.value;\r\n    let note = event.target.note.value;\r\n    dispatch(postCreation(name, note));\r\n  };\r\n  const handleDelete = (id) => {\r\n    console.log(id);\r\n    axios.delete(`posts/${id}.json`).then((response) => {\r\n      console.log(response);\r\n      dispatch(getAllPosts());\r\n    });\r\n  };\r\n  //console.log(posts);\r\n  return (\r\n    <div>\r\n      <Navbar sticky=\"top\" bg=\"primary\" variant=\"dark\">\r\n        <Navbar.Brand href=\"#home\">KattaPost!</Navbar.Brand>\r\n        <Navbar.Toggle />\r\n        <Navbar.Collapse className=\"justify-content-end\">\r\n          <Nav className=\"mr-auto\"></Nav>\r\n          <Nav>\r\n            <Nav.Link onClick={handleLogout}>\r\n              <Link to=\"/login\" style={{ color: \"#fff\" }}>\r\n                Logout\r\n              </Link>\r\n            </Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n\r\n      <Container fluid>\r\n        <Row className=\"mt-3\">\r\n          <Col sm={8}>\r\n            <Jumbotron>\r\n              <h1>Celebrate endings for they precede new beginnings.</h1>\r\n              <p>Create your new year resolution and share with me.</p>\r\n              <p>\r\n                <Button variant=\"primary\">Learn more</Button>\r\n              </p>\r\n            </Jumbotron>\r\n          </Col>\r\n          <Col sm={4}>\r\n            <Form onSubmit={handleSubmit}>\r\n              <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control\r\n                  name=\"name\"\r\n                  type=\"text\"\r\n                  placeholder=\"Your name...\"\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                <Form.Label>Your Post</Form.Label>\r\n                <Form.Control\r\n                  name=\"note\"\r\n                  as=\"textarea\"\r\n                  rows={3}\r\n                  placeholder=\"Type something...\"\r\n                />\r\n              </Form.Group>\r\n              <Button className=\"w-100 mt-3 mb-5\" type=\"submit\">\r\n                Create Post\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Container fluid>\r\n        <CardColumns>\r\n          {posts.map((item) => {\r\n            return (\r\n              <Card key={item.id} border=\"success\" className=\"p-3\">\r\n                <Button\r\n                  style={{ float: \"right\" }}\r\n                  type=\"button\"\r\n                  variant=\"light\"\r\n                  onClick={() => handleDelete(item.id)}\r\n                >\r\n                  <Trash color=\"#007bff\" size={24} />\r\n                </Button>\r\n                <blockquote className=\"blockquote mb-0 card-body\">\r\n                  <p>{item.note}</p>\r\n                  <footer className=\"blockquote-footer\">\r\n                    <small className=\"text-muted\">\r\n                      Post Created by{\" \"}\r\n                      <cite title=\"Source Title\">{item.name}</cite>\r\n                    </small>\r\n                  </footer>\r\n                </blockquote>\r\n              </Card>\r\n            );\r\n          })}\r\n        </CardColumns>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\r\nimport { auth } from \"../Redux/Actions/authActions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nexport default function Signup() {\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const passwordConfirmRef = useRef();\r\n  const errors = useSelector((state) => state.authReducer.error);\r\n  const [error, setError] = useState(\"\");\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  let signUp = false;\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Password do not match!\");\r\n    }\r\n    try {\r\n      setError(\"\");\r\n\r\n      await dispatch(\r\n        auth(emailRef.current.value, passwordRef.current.value, history, signUp)\r\n      );\r\n    } catch {\r\n      setError(\"Fail to create account\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className=\"text-center mb-4\">Sign Up</h2>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          {errors && <Alert variant=\"danger\">{errors}</Alert>}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type=\"email\" ref={emailRef} required />\r\n            </Form.Group>\r\n            <Form.Group id=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control type=\"password\" ref={passwordRef} required />\r\n            </Form.Group>\r\n            <Form.Group id=\"password-confirm\">\r\n              <Form.Label>Password Confirmation</Form.Label>\r\n              <Form.Control type=\"password\" ref={passwordConfirmRef} required />\r\n            </Form.Group>\r\n            <Button className=\"w-100 mt-3\" type=\"submit\">\r\n              Sign Up\r\n            </Button>\r\n            <div className=\"w-100 text-center mt-4\">\r\n              Already have an account?<Link to=\"/login\">Sign In</Link>\r\n            </div>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function About() {\r\n  return <div>About page</div>;\r\n}\r\n","import React from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\n\r\nexport default function Post() {\r\n  return (\r\n    <div>\r\n      <Form>\r\n        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control type=\"text\" placeholder=\"John Doe\" />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n          <Form.Label>Your Post</Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows={3}\r\n            placeholder=\"Type something...\"\r\n          />\r\n        </Form.Group>\r\n        <Button className=\"w-100 mt-3\" type=\"submit\">\r\n          Create Post\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function ForgotPassword() {\r\n  return <div>Forgot Password</div>;\r\n}\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  const authData = useSelector((state) => state.authReducer.authData);\r\n  console.log({ authData });\r\n  let token = localStorage.getItem(\"token\");\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        return !token ? <Redirect to=\"/login\" /> : <Component {...props} />;\r\n      }}\r\n    ></Route>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { autoLogin } from \"./Redux/Actions/authActions\";\nimport { Container } from \"react-bootstrap\";\nimport Login from \"./Containers/Login\";\nimport Dashboard from \"./Containers/Dashboard\";\nimport Signup from \"./Containers/Signup\";\nimport About from \"./Containers/About\";\nimport Post from \"./Containers/Post\";\nimport ForgotPassword from \"./Containers/ForgotPassword\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport PrivateRoute from \"./Route/PrivateRoute\";\nfunction App() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(autoLogin());\n  }, [dispatch]);\n  return (\n    <Router basename=\"/React-Redux-Learning\">\n      <Switch>\n        <PrivateRoute exact path=\"/\" component={Dashboard} />\n        <PrivateRoute exact path=\"/about\" component={About} />\n        <PrivateRoute exact path=\"/post\" component={Post} />\n        <Container\n          className=\"d-flex align-items-center justify-content-center\"\n          style={{ minHeight: \"100vh\" }}\n        >\n          <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\n            <Route path=\"/React-Redux-Learning/login\" component={Login} />\n            <Route path=\"/React-Redux-Learning/signup\" component={Signup} />\n            <Route\n              path=\"/React-Redux-Learning/forgot-password\"\n              component={ForgotPassword}\n            />\n          </div>\n        </Container>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const initialState = {\r\n  loading: false,\r\n  authData: {},\r\n  error: null,\r\n};\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"AUTH_START\":\r\n      state = {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n      break;\r\n    case \"AUTH_SUCCESS\":\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n        authData: action.payload,\r\n        error: null,\r\n      };\r\n      break;\r\n    case \"AUTH_FAILURE\":\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n        authData: {},\r\n        error: action.payload,\r\n      };\r\n      break;\r\n    case \"AUTH_LOGOUT\":\r\n      state = {\r\n        ...state,\r\n        authData: {},\r\n      };\r\n      break;\r\n    default:\r\n      return state;\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default authReducer;\r\n","const initialState = {\r\n  loading: false,\r\n  postData: [],\r\n  error: null,\r\n};\r\nexport const postReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"POST_FETCH_START\":\r\n      state = {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n      break;\r\n    case \"POST_FETCH_SUCCESS\":\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n        postData: action.payload,\r\n        error: null,\r\n      };\r\n      break;\r\n    case \"POST_FETCH_FAILURE\":\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n        postData: [],\r\n        error: action.payload,\r\n      };\r\n      break;\r\n    default:\r\n      return state;\r\n  }\r\n  return state;\r\n};\r\n\r\nconst createPostInitialState = {\r\n  loading: false,\r\n  postData: [],\r\n  error: null,\r\n};\r\nexport const postCreationReducer = (state = createPostInitialState, action) => {\r\n  switch (action.type) {\r\n    case \"POST_CREATION_START\":\r\n      state = {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n      break;\r\n    case \"POST_CREATION_SUCCESS\":\r\n      const newPost = {\r\n        ...action.postData,\r\n        id: action.postId,\r\n      };\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n        postData: state.postData.concat(newPost),\r\n        error: null,\r\n      };\r\n      break;\r\n    case \"POST_CREATION_FAILURE\":\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n        postData: [],\r\n        error: action.payload,\r\n      };\r\n      break;\r\n    default:\r\n      return state;\r\n  }\r\n  return state;\r\n};\r\n\r\nconst deletePostInitialState = {\r\n  loading: false,\r\n  postData: [],\r\n  error: null,\r\n};\r\nexport const postDeletionReducer = (state = deletePostInitialState, action) => {\r\n  switch (action.type) {\r\n    case \"POST_DELETE_START\":\r\n      state = {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n      break;\r\n    case \"POST_DELETE_SUCCESS\":\r\n      const newPost = {\r\n        ...action.postData,\r\n        id: action.postId,\r\n      };\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n        postData: state.postData.concat(newPost),\r\n        error: null,\r\n      };\r\n      break;\r\n    case \"POST_DELETE_FAILURE\":\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n        postData: [],\r\n        error: action.payload,\r\n      };\r\n      break;\r\n    default:\r\n      return state;\r\n  }\r\n  return state;\r\n};\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport authReducer from \"./Reducers/AuthReducer\";\r\nimport { postReducer } from \"./Reducers/postReducer\";\r\nimport { postCreationReducer } from \"./Reducers/postReducer\";\r\nimport thunk from \"redux-thunk\";\r\nconst store = createStore(\r\n  combineReducers({ authReducer, postCreationReducer, postReducer }),\r\n  {},\r\n  applyMiddleware(thunk, logger)\r\n);\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Redux/Store\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}